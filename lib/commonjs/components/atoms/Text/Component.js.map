{"version":3,"sources":["Component.tsx"],"names":["Text","React","forwardRef","ref","style","children","textColor","rest","StyleSheet","flatten","color","displayName"],"mappings":";;;;;;;AAAA;;AACA;;AAOA;;;;;;AAOA;AACA,MAAMA,IAAI,gBAAGC,eAAMC,UAAN,CACX,OAAoDC,GAApD,KAA4D;AAAA,MAA3D;AAAEC,IAAAA,KAAK,GAAG,EAAV;AAAcC,IAAAA,QAAQ,GAAG,EAAzB;AAA6BC,IAAAA,SAA7B;AAAwC,OAAGC;AAA3C,GAA2D;AAC1D,sBACE,6BAAC,iBAAD;AACE,IAAA,GAAG,EAAEJ,GADP;AAEE,IAAA,KAAK,EAAEK,wBAAWC,OAAX,CAAmB,CACxB;AACEC,MAAAA,KAAK,EAAEJ;AADT,KADwB,EAIxBF,KAJwB,CAAnB;AAFT,KAQM,4BAAcG,IAAd,CARN,GAUGF,QAVH,CADF;AAcD,CAhBU,CAAb;;AAmBAL,IAAI,CAACW,WAAL,GAAmB,MAAnB;eAEeX,I","sourcesContent":["import React from \"react\";\nimport {\n  Text as NativeText,\n  StyleSheet,\n  TextProps as RNTextProps,\n  TextStyle,\n  StyleProp,\n} from \"react-native\";\nimport { patchWebProps } from \"../../../theme/helpers\";\n\nexport interface TextProps extends RNTextProps {\n  style?: StyleProp<TextStyle>;\n  textColor?: string;\n}\n\n/** Text displays words and characters at various sizes. */\nconst Text = React.forwardRef<NativeText, TextProps>(\n  ({ style = {}, children = \"\", textColor, ...rest }, ref) => {\n    return (\n      <NativeText\n        ref={ref}\n        style={StyleSheet.flatten([\n          {\n            color: textColor,\n          },\n          style,\n        ])}\n        {...patchWebProps(rest)}\n      >\n        {children}\n      </NativeText>\n    );\n  }\n);\n\nText.displayName = \"Text\";\n\nexport default Text;\n"]}