{"version":3,"sources":["Component.tsx"],"names":["formatDateTime","date","mode","hour","getHours","HH","minute","getMinutes","MM","day","getDate","DD","month","getMonth","MO","getFullYear","DatePicker","React","forwardRef","ref","value","style","display","dateMode","confirmText","cancelText","onBlur","onChange","disabled","cancelButtonStyle","confirmButtonStyle","errorStyle","errorMessage","isPreview","props","show","setShow","setDate","Date","step","setStep","selectedMode","handleConfirm","handleOpenPicker","handleCancel","handleChange","e","newDate","lastDate","setHours","setMinutes","setSeconds","getSeconds","hideErrorMessage","styles","dateInput","placeholderText","iconContainer","defaultTheme","colors","grey3","IconType","AntDesign","StyleSheet","flatten","marginTop","spacing","SPACING_5","fontSize","fontSizes","FONT_12","color","error","height","margin","padding","modalContainer","modalActionContainer","cancelButton","confirmButton","create","iconStyle","grey5","position","right","borderRadius","width","borderWidth","justifyContent","borderColor","minHeight","paddingHorizontal","paddingRight","bottom","backgroundColor","white","borderTopLeftRadius","borderTopRightRadius","paddingVertical","flexDirection","success","displayName"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  TouchableOpacity,\n  StyleSheet,\n  View,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n  Modal,\n} from \"react-native\";\nimport RNDateTimePicker from \"@react-native-community/datetimepicker\";\nimport type { PropsWithRef, PreviewProps } from \"../../../type\";\nimport { defaultTheme } from \"../../../theme\";\nimport { Text, Icon, IconType } from \"../../../index\";\n\n/**\n * DatePicker support date/time select on iOS and Android and built on top of react-native-datetimepicker\n * Reference: https://github.com/react-native-datetimepicker/datetimepicker\n **/\n\nexport type DateMode = \"date\" | \"time\" | \"datetime\";\n\nexport interface DatePickerProps extends PreviewProps {\n  value?: Date;\n  dateMode?: DateMode;\n  confirmText?: string;\n  cancelText?: string;\n  onChange?: (date: any) => void;\n  onBlur?: any;\n  style?: ViewStyle;\n  disabled?: boolean;\n  cancelButtonStyle?: TextStyle;\n  confirmButtonStyle?: TextStyle;\n  display?: \"default\" | \"compact\" | \"inline\" | \"spinner\" | \"clock\" | \"calendar\";\n  errorStyle?: StyleProp<TextStyle>;\n  errorMessage?: string;\n}\n\nconst formatDateTime = (date: Date, mode: DateMode) => {\n  const hour = date.getHours();\n  const HH = hour < 10 ? `0${hour}` : hour;\n  const minute = date.getMinutes();\n  const MM = minute < 10 ? `0${minute}` : minute;\n  const day = date.getDate();\n  const DD = day < 10 ? `0${day}` : day;\n  const month = date.getMonth() + 1;\n  const MO = month < 10 ? `0${month}` : month;\n\n  if (mode === \"date\") {\n    return `${DD}/${MO}/${date.getFullYear()}`;\n  }\n\n  if (mode === \"time\") {\n    return `${HH}:${MM}`;\n  }\n  return `${DD}/${MO}/${date.getFullYear()} ${HH}:${MM}`;\n};\n\nconst DatePicker = React.forwardRef<TouchableOpacity, DatePickerProps>(\n  (\n    {\n      value,\n      style,\n      display = \"spinner\",\n      dateMode = \"datetime\",\n      confirmText = \"Confirm\",\n      cancelText = \"Cancel\",\n      onBlur,\n      onChange,\n      disabled,\n      cancelButtonStyle,\n      confirmButtonStyle,\n      errorStyle,\n      errorMessage,\n      isPreview = false,\n      ...props\n    },\n    ref\n  ) => {\n    const [show, setShow] = useState<boolean>(false);\n    const [date, setDate] = useState<Date>(value ? value : new Date());\n    const [step, setStep] = useState<number>(1);\n\n    const selectedMode: any = dateMode === \"datetime\" ? (step === 1 ? \"date\" : \"time\") : dateMode;\n\n    const handleConfirm = () => {\n      if (!onChange) {\n        return;\n      }\n      if (dateMode !== \"datetime\") {\n        onChange(date);\n        setShow(false);\n        setDate(date);\n      } else if (step === 1) {\n        setStep(2);\n        handleOpenPicker();\n        return;\n      } else {\n        onChange(date);\n        setStep(1);\n        setShow(false);\n      }\n\n      if (typeof onBlur === \"function\") {\n        onBlur();\n      }\n    };\n\n    const handleCancel = () => {\n      setShow(false);\n      setStep(1);\n      if (typeof onBlur === \"function\") {\n        onBlur();\n      }\n    };\n\n    const handleChange = (e: any, newDate: any) => {\n      if (dateMode !== \"datetime\" || step === 1) {\n        setDate(newDate);\n      } else {\n        const lastDate = date;\n        lastDate?.setHours(newDate?.getHours() || 0);\n        lastDate?.setMinutes(newDate?.getMinutes() || 0);\n        lastDate?.setSeconds(newDate?.getSeconds() || 0);\n        setDate(lastDate);\n      }\n    };\n\n    const handleOpenPicker = () => {\n      if (isPreview) {\n        return;\n      }\n      setShow(true);\n    };\n\n    const hideErrorMessage = !errorMessage;\n\n    return (\n      <>\n        <TouchableOpacity\n          disabled={disabled}\n          onPress={handleOpenPicker}\n          style={[styles.dateInput, style]}\n          ref={ref}\n        >\n          <Text style={[styles.placeholderText]}>\n            {value ? formatDateTime(value, dateMode) : \"--\"}\n          </Text>\n          <View style={styles.iconContainer}>\n            <Icon color={defaultTheme?.colors?.grey3} name=\"calendar\" type={IconType.AntDesign} />\n          </View>\n        </TouchableOpacity>\n        <Text\n          style={StyleSheet.flatten([\n            {\n              marginTop: defaultTheme?.spacing?.SPACING_5,\n              fontSize: defaultTheme?.fontSizes?.FONT_12,\n              color: defaultTheme?.colors?.error,\n            },\n            errorStyle && errorStyle,\n            hideErrorMessage && {\n              height: 0,\n              margin: 0,\n              marginTop: 0,\n              padding: 0,\n            },\n          ])}\n        >\n          {errorMessage}\n        </Text>\n        <Modal\n          animationType=\"slide\"\n          transparent={true}\n          visible={show}\n          onRequestClose={() => {\n            setShow(!show);\n          }}\n        >\n          <View style={styles.modalContainer}>\n            <View style={styles.modalActionContainer}>\n              <TouchableOpacity onPress={handleCancel}>\n                <Text style={[styles.cancelButton, cancelButtonStyle]}>{cancelText}</Text>\n              </TouchableOpacity>\n              <TouchableOpacity onPress={handleConfirm}>\n                <Text style={[styles.confirmButton, confirmButtonStyle]}>{confirmText}</Text>\n              </TouchableOpacity>\n            </View>\n            <RNDateTimePicker\n              value={date ? date : new Date()}\n              timeZoneOffsetInSeconds={0}\n              mode={selectedMode}\n              display={display}\n              onChange={handleChange}\n              {...props}\n            />\n          </View>\n        </Modal>\n      </>\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  iconStyle: {\n    color: defaultTheme?.colors?.grey5,\n  },\n  iconContainer: {\n    position: \"absolute\",\n    right: 10,\n  },\n  dateInput: {\n    borderRadius: 5,\n    fontSize: 18,\n    width: \"100%\",\n    borderWidth: 1,\n    justifyContent: \"center\",\n    borderColor: defaultTheme?.colors?.grey5,\n    minHeight: 50,\n    paddingHorizontal: 10,\n    paddingRight: 30,\n  },\n  placeholderText: {\n    fontSize: 16,\n  },\n  modalContainer: {\n    position: \"absolute\",\n    width: \"100%\",\n    bottom: 0,\n    backgroundColor: defaultTheme?.colors?.white,\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8,\n  },\n  modalActionContainer: {\n    paddingVertical: 8,\n    paddingHorizontal: 8,\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  cancelButton: {\n    fontSize: 15,\n  },\n  confirmButton: {\n    fontSize: 15,\n    color: defaultTheme?.colors?.success,\n  },\n});\n\nDatePicker.displayName = \"DatePicker\";\n\nexport default DatePicker;\n"]}