{"version":3,"sources":["Component.tsx"],"names":["Header","React","forwardRef","ref","title","height","renderLeft","renderCenter","renderRight","backgroundColor","borderBottomWidth","borderBottomColor","onBackPress","useDefaultBackButton","style","leftIconName","leftIconType","IconType","Feather","leftIconSize","leftIconColor","onPressLeftIcon","rightIconName","rightIconType","rightIconSize","rightIconColor","onPressRightIcon","titleStyle","safeAreaTop","defaultLeftIconSize","Platform","OS","defaultTheme","fontSizes","FONT_24","defaultRightIconSize","onPressBack","renderCenterComponent","styles","labelText","renderDefaultLeftButton","buttonBackContainer","renderLeftComponents","renderRightComponents","rightButtonContainer","renderInside","undefined","wrapper","spacing","SPACING_45","leftWrapper","centerWrapper","rightWrapper","StyleSheet","create","flexDirection","alignItems","paddingLeft","SPACING_10","paddingRight","borderColor","flex","justifyContent","width","fontWeight","fontSize","FONT_16","textAlign","displayName"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  TouchableOpacity,\n  StyleSheet,\n  ViewStyle,\n  StyleProp,\n  TextStyle,\n  Platform,\n  View as RNView,\n} from \"react-native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\n\nimport View from \"../View/Component\";\nimport { defaultTheme } from \"../../../theme\";\nimport { Text, Icon, IconType } from \"../../../index\";\n\nexport interface HeaderProps {\n  title?: string;\n  renderLeft?: () => JSX.Element;\n  renderCenter?: () => JSX.Element;\n  renderRight?: () => JSX.Element;\n  backgroundColor?: string;\n  borderBottomWidth?: number;\n  borderBottomColor?: string;\n  height?: number;\n  useDefaultBackButton?: boolean;\n  onBackPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  leftIconName?: string;\n  leftIconType?: `${IconType}`;\n  leftIconSize?: number;\n  leftIconColor?: string;\n  onPressLeftIcon?: () => void;\n  rightIconName?: string;\n  rightIconType?: `${IconType}`;\n  rightIconSize?: number;\n  rightIconColor?: string;\n  onPressRightIcon?: () => void;\n  titleStyle?: TextStyle;\n  safeAreaTop?: boolean;\n}\n\nconst Header = React.forwardRef<RNView, HeaderProps>(\n  (\n    {\n      title,\n      height,\n      renderLeft,\n      renderCenter,\n      renderRight,\n      backgroundColor,\n      borderBottomWidth,\n      borderBottomColor,\n      onBackPress,\n      useDefaultBackButton = false,\n      style,\n      leftIconName = \"chevron-left\",\n      leftIconType = IconType.Feather,\n      leftIconSize,\n      leftIconColor,\n      onPressLeftIcon,\n      rightIconName,\n      rightIconType,\n      rightIconSize,\n      rightIconColor,\n      onPressRightIcon,\n      titleStyle,\n      safeAreaTop,\n    },\n    ref\n  ) => {\n    const defaultLeftIconSize =\n      leftIconSize || (Platform.OS === \"web\" ? 24 : defaultTheme.fontSizes.FONT_24);\n\n    const defaultRightIconSize =\n      rightIconSize || (Platform.OS === \"web\" ? 24 : defaultTheme.fontSizes.FONT_24);\n\n    const onPressBack = () => {\n      if (onBackPress) {\n        return onBackPress();\n      }\n    };\n    const renderCenterComponent = () => {\n      if (renderCenter) {\n        return renderCenter();\n      }\n      return <Text style={[styles.labelText, titleStyle]}>{title}</Text>;\n    };\n\n    // Render the default left button\n    const renderDefaultLeftButton = () => (\n      <TouchableOpacity onPress={onPressBack} style={styles.buttonBackContainer}>\n        <Icon type={IconType.Feather} name=\"chevron-left\" size={defaultLeftIconSize} color=\"#000\" />\n      </TouchableOpacity>\n    );\n\n    const renderLeftComponents = () => {\n      if (useDefaultBackButton) {\n        return renderDefaultLeftButton();\n      } else if (renderLeft) {\n        return renderLeft();\n      } else if (leftIconName) {\n        return (\n          <TouchableOpacity onPress={onPressLeftIcon} style={styles.buttonBackContainer}>\n            <Icon\n              type={leftIconType}\n              name={leftIconName}\n              size={defaultLeftIconSize}\n              color={leftIconColor}\n            />\n          </TouchableOpacity>\n        );\n      }\n      return null;\n    };\n\n    const renderRightComponents = () => {\n      if (renderRight) {\n        return renderRight();\n      } else if (rightIconName) {\n        return (\n          <TouchableOpacity onPress={onPressRightIcon} style={styles.rightButtonContainer}>\n            <Icon\n              type={rightIconType}\n              name={rightIconName}\n              size={defaultRightIconSize}\n              color={rightIconColor}\n            />\n          </TouchableOpacity>\n        );\n      }\n      return null;\n    };\n\n    const renderInside = () => {\n      return (\n        <>\n          {safeAreaTop ? <SafeAreaView edges={[\"top\"]} style={{ backgroundColor }} /> : undefined}\n          <View\n            ref={ref}\n            style={[\n              styles.wrapper,\n              {\n                backgroundColor,\n                borderBottomWidth: borderBottomWidth ?? 1,\n                borderBottomColor: borderBottomColor ?? \"rgba(0,0,0,0.1)\",\n                height: height || (Platform.OS === \"web\" ? 45 : defaultTheme?.spacing?.SPACING_45),\n              },\n              style,\n            ]}\n          >\n            <View style={styles.leftWrapper}>{renderLeftComponents()}</View>\n            <View style={styles.centerWrapper}>{renderCenterComponent()}</View>\n            <View style={styles.rightWrapper}>{renderRightComponents()}</View>\n          </View>\n        </>\n      );\n    };\n    return renderInside();\n  }\n);\n\nconst styles = StyleSheet.create({\n  buttonBackContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingLeft: Platform.OS === \"web\" ? 10 : defaultTheme.spacing.SPACING_10,\n  },\n  rightButtonContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingRight: Platform.OS === \"web\" ? 10 : defaultTheme.spacing.SPACING_10,\n  },\n  wrapper: {\n    flexDirection: \"row\",\n    borderColor: \"rgba(0,0,0,0.1)\",\n    alignItems: \"center\",\n  },\n  leftWrapper: {\n    flex: 0.2,\n  },\n  centerWrapper: {\n    flex: 0.6,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  labelText: {\n    width: \"100%\",\n    fontWeight: \"600\",\n    fontSize: Platform.OS === \"web\" ? 16 : defaultTheme.fontSizes.FONT_16,\n    textAlign: \"center\",\n  },\n  rightWrapper: {\n    flex: 0.2,\n    alignItems: \"flex-end\",\n  },\n});\n\nHeader.displayName = \"Header\";\n\nexport default Header;\n"]}