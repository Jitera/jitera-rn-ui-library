{"version":3,"sources":["Component.tsx"],"names":["React","useMemo","Image","RnImage","forwardRef","ref","resizeMode","source","ImageComponent","uri","props","newSource","displayName"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,KAAK,IAAIC,OAAlB,QAA6D,cAA7D;AAWA,MAAMD,KAAK,gBAAGF,KAAK,CAACI,UAAN,CACZ,OAA4EC,GAA5E,KAAoF;AAAA,MAAnF;AAAEC,IAAAA,UAAU,GAAG,OAAf;AAAwBC,IAAAA,MAAxB;AAAgCC,IAAAA,cAAc,GAAGL,OAAjD;AAA0DM,IAAAA,GAA1D;AAA+D,OAAGC;AAAlE,GAAmF;AAClF,QAAMC,SAAS,GAAGV,OAAO,CAAC,MAAM;AAC9B,QAAIQ,GAAJ,EAAS;AACP,aAAO;AAAEA,QAAAA;AAAF,OAAP;AACD;;AACD,QAAI,OAAOF,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,aAAO;AACLE,QAAAA,GAAG,EAAEF;AADA,OAAP;AAGD;;AACD,WAAOA,MAAP;AACD,GAVwB,EAUtB,CAACE,GAAD,EAAMF,MAAN,CAVsB,CAAzB;AAYA,sBACE,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEF,GAArB;AAA0B,IAAA,MAAM,EAAEM,SAAlC;AAA6C,IAAA,UAAU,EAAEL;AAAzD,KAAyEI,KAAzE,EADF;AAGD,CAjBW,CAAd;AAoBAR,KAAK,CAACU,WAAN,GAAoB,OAApB;AAEA,eAAeV,KAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport { Image as RnImage, ImageProps as RnImageProps } from \"react-native\";\nimport type { PropsWithRef } from \"../../../type\";\n\nexport type ImageProps = PropsWithRef<\n  Omit<RnImageProps, 'source'> & {\n      ImageComponent?: React.ElementType<RnImageProps | any>;\n      uri?: string;\n      source: RnImageProps[\"source\"] | string;\n    }\n>;\n\nconst Image = React.forwardRef<RnImage, ImageProps>(\n  ({ resizeMode = \"cover\", source, ImageComponent = RnImage, uri, ...props }, ref) => {\n    const newSource = useMemo(() => {\n      if (uri) {\n        return { uri }\n      }\n      if (typeof source === \"string\") {\n        return {\n          uri: source,\n        };\n      }\n      return source;\n    }, [uri, source]);\n\n    return (\n      <ImageComponent ref={ref} source={newSource} resizeMode={resizeMode} {...props} />\n    );\n  }\n);\n\nImage.displayName = \"Image\";\n\nexport default Image;\n"]}