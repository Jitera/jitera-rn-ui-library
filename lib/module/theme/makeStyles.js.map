{"version":3,"sources":["makeStyles.ts"],"names":["useContext","StyleSheet","ThemeContext","useTheme","makeStyles","styles","props","theme","css","create"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,SAAOH,UAAU,CAACE,YAAD,CAAjB;AACD,CAFM;AAIP,OAAO,MAAME,UAAU,GAEnBC,MADF,IAGA,YAA6B;AAAA,MAA5BC,KAA4B,uEAAjB,EAAiB;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAYJ,QAAQ,EAA1B;AACA,QAAMK,GAAG,GAAG,OAAOH,MAAP,KAAkB,UAAlB,GAA+BA,MAAM,CAACE,KAAD,EAAQD,KAAR,CAArC,GAAsDD,MAAlE;AAEA,SAAOJ,UAAU,CAACQ,MAAX,CAAkBD,GAAlB,CAAP;AACD,CATI","sourcesContent":["import { useContext } from 'react';\nimport { StyleSheet } from 'react-native';\nimport type { FullTheme } from './theme';\nimport { ThemeContext } from './ThemeProvider';\n\nexport const useTheme = () => {\n  return useContext(ThemeContext);\n};\n\nexport const makeStyles =\n  <T extends StyleSheet.NamedStyles<T> | StyleSheet.NamedStyles<any>, V>(\n    styles: T | ((theme: Partial<FullTheme>, props: V) => T)\n  ) =>\n  (props: V = {} as any): T => {\n    const { theme } = useTheme();\n    const css = typeof styles === 'function' ? styles(theme, props) : styles;\n\n    return StyleSheet.create(css);\n  };\n"]}