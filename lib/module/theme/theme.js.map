{"version":3,"sources":["theme.tsx"],"names":["colors","spacing","fontSizes","fonts"],"mappings":"AAkBA,OAAOA,MAAP,MAA+B,UAA/B;AACA,OAAOC,OAAP,MAAiC,WAAjC;AACA,OAAOC,SAAP,MAAqC,YAArC;AACA,OAAOC,KAAP,MAAiC,SAAjC;AAEA,eAAe;AACbA,EAAAA,KADa;AAEbH,EAAAA,MAFa;AAGbC,EAAAA,OAHa;AAIbC,EAAAA;AAJa,CAAf","sourcesContent":["import type {\n  ButtonProps,\n  ImageProps,\n  InputProps,\n  TextProps,\n  ViewProps,\n  IconProps,\n  PageProps,\n  DividerProps,\n  WebViewProps,\n} from '../';\nimport type {\n  ModalProps,\n  ToastProps,\n  CommonLoadingProps,\n} from '../components/widgets';\n\nimport type { SafeAreaSize } from './safeAreaSize';\nimport colors, { Colors } from './colors';\nimport spacing, { Spacing } from './spacing';\nimport fontSizes, { FontSizes } from './fontSize';\nimport fonts, { FontTypes } from './fonts';\n\nexport default {\n  fonts,\n  colors,\n  spacing,\n  fontSizes,\n};\n\ntype RecursivePartial<T> = { [P in keyof T]?: RecursivePartial<T[P]> };\n\nexport interface FullTheme {\n  brandingColors?: any;\n  Toast: Partial<ToastProps>;\n  CommonLoading: Partial<CommonLoadingProps>;\n  Modal: Partial<ModalProps>;\n  Button: Partial<ButtonProps>;\n  Image: Partial<ImageProps>;\n  Input: Partial<InputProps>;\n  Text: Partial<TextProps>;\n  View: Partial<ViewProps>;\n  Icon: Partial<IconProps>;\n  Page: Partial<PageProps>;\n  colors: RecursivePartial<Colors>;\n  spacing: Partial<Spacing>;\n  fontSizes: Partial<FontSizes>;\n  fonts: Partial<FontTypes>;\n  safeArea: Partial<SafeAreaSize>;\n  Divider: Partial<DividerProps>;\n  WebView: Partial<WebViewProps>;\n}\n\nexport type Theme<T = any> = Partial<FullTheme> & T;\n\nexport type UpdateTheme = (updates: RecursivePartial<FullTheme>) => void;\n\nexport type ReplaceTheme = (updates: RecursivePartial<FullTheme>) => void;\n"]}